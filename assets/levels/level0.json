{
	"matrix":
		[
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","x","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","#","#","#","#","#","#","#","#","#","E","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","M","S","S","S","S","M","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","M","M","s","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","W","M","M","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","1","S","S","S","S","S","S","S","1","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","M","S","S","S","2","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","3","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","M","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],    
			["S","S","S","S","S","S","S","S","S","S","W","M","M","M","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","P","S","S","S","S","S","S","S","S","W","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","2","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"],
			["S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S"]
		],
	"x":"var enemy = new Enemy4(shipTexture3);\n\t\t\t\tenemy.id = itemID;\n\t\t\t\tenemy.width = xStep;\n\t\t\t\tenemy.height = xStep;\n\t\t\t\tenemy.x = (j-10) * xStep + 0.5 * xStep;\n\t\t\t\tenemy.y = (i-10) * yStep + 0.5 * xStep;\n\t\t\t\tvar rand = Math.random();\n\t\t\t\tenemy.rotation = rand < 0.5 ? ( rand < 0.25 ? 0 : Math.PI/2) : ( rand < 0.75 ? Math.PI : Math.PI/-2);\n\t\t\t\tenemy.bulletTextures[\"energyBullet\"] = enemyEnergyBulletTexture;\n\t\t\t\tenemy.deathItemsTextures = eDeathItems;\n\t\t\t\tenemy.dropItem = function() {\n\t\t\t\t\tvar item = new Item(itemTexture0,function(){\n\t\t\t\t\t\tpShip.factor += 0.2;\n\t\t\t\t\t\tpShip.speedX += 0.2;\n\t\t\t\t\t\tpShip.speedY += 0.2;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\titem.x = this.x;\n\t\t\t\t\titem.y = this.y;\n\t\t\t\t\titems.push(item);\n\t\t\t\t\tcontainer.addChild(item);\n\t\t\t\t}.bind(enemy);\n\t\t\t\teShips.push(enemy);\n\t\t\t\tcontainer.addChild(enemy);\n\t\t\t\t\n\t\t\t\tif (enemy.rotation == Math.PI || enemy.rotation == 0) {\n\t\t\t\t\tvar frontRadar = new Radar(enemyOneRadar, enemy, Math.PI);\n\t\t\t\t\tfrontRadar.width = xStep * 2;\n\t\t\t\t\tfrontRadar.height = xStep * 2;\n\t\t\t\t\tfrontRadar.x = enemy.x;\n\t\t\t\t\tfrontRadar.y = enemy.y + 1.5 * yStep;\n\t\t\t\t\tfrontRadar.alpha = 0.5;\n\t\t\t\t\tradars.push(frontRadar);\n\t\t\t\t\tcontainer.addChild(frontRadar);\n\t\t\t\t\t\n\t\t\t\t\tvar endRadar = new Radar(enemyOneRadar, enemy, 0);\n\t\t\t\t\tendRadar.width = xStep * 2;\n\t\t\t\t\tendRadar.height = xStep * 2;\n\t\t\t\t\tendRadar.x = enemy.x;\n\t\t\t\t\tendRadar.y = enemy.y - 1.5 * yStep;\n\t\t\t\t\tendRadar.alpha = 0.5;\n\t\t\t\t\tradars.push(endRadar);\n\t\t\t\t\tcontainer.addChild(endRadar);\n\t\t\t\t} else {\n\t\t\t\t\tvar frontRadar = new Radar(enemyOneRadar, enemy, Math.PI / 2);\n\t\t\t\t\tfrontRadar.width = xStep * 2;\n\t\t\t\t\tfrontRadar.height = xStep * 2;\n\t\t\t\t\tfrontRadar.x = enemy.x + 1.5 * xStep;\n\t\t\t\t\tfrontRadar.y = enemy.y;\n\t\t\t\t\tfrontRadar.alpha = 0.5;\n\t\t\t\t\tradars.push(frontRadar);\n\t\t\t\t\tcontainer.addChild(frontRadar);\n\t\t\t\t\t\n\t\t\t\t\tvar endRadar = new Radar(enemyOneRadar, enemy, 3 * Math.PI / 2);\n\t\t\t\t\tendRadar.width = xStep * 2;\n\t\t\t\t\tendRadar.height = xStep * 2;\n\t\t\t\t\tendRadar.x = enemy.x - 1.5 * xStep;\n\t\t\t\t\tendRadar.y = enemy.y;\n\t\t\t\t\tendRadar.alpha = 0.5;\n\t\t\t\t\tradars.push(endRadar);\n\t\t\t\t\tcontainer.addChild(endRadar);\n\t\t\t\t}\n\t\t\t\tenemy.radars.push(frontRadar);\n\t\t\t\tenemy.radars.push(endRadar);"
}
